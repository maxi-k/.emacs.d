#+TITLE: General Settings
#+DESCRIPTION: Settings that are general/minimal enough to put them into one file
#+AUTHOR: Maximilian Kuschewski
#+PROPERTY: my-file-type emacs-config

* Locate/mdfind
Use spotlight for the locate command
#+begin_src emacs-lisp
(setq locate-command "mdfind")
#+end_src

* General Defaults
#+begin_src emacs-lisp
  (setq default-directory "~"
        diff-switches "-u"
        ediff-window-setup-function 'ediff-setup-windows-plain
        inhibit-startup-message t
        initial-scratch-message nil
        mouse-wheel-scroll-amount '(1 ((shift) . 1))
        mouse-yank-at-point t
        oddmuse-directory "~/.emacs.d/data/oddmuse"
        save-place-file "~/.emacs.d/data/places"
        scroll-step 1
        sentence-end-double-space nil
        ;; set-mark-command-repeat-pop t
        shift-select-mode nil
        transient-mark-mode t
        uniquify-buffer-name-style 'forward
        whitespace-line-column 80
        whitespace-style '(face trailing lines-tail tabs))

  (set-default 'indent-tabs-mode nil)
  (set-default 'imenu-auto-rescan t)
  ;; Set the uniquify buffer name style to
  ;; filename|folder
  (setq uniquify-buffer-name-style 'post-forward)
  (setq remember-data-directory (concat user-emacs-save-directory "remember"))
  ;; Delete trainling whitespace
  (add-hook 'before-save-hook (lambda () (delete-trailing-whitespace)))

  ;; Use the right ispell version, if it exists
  (let ((path (executable-find "ispell")))
    (when (and path (file-exists-p path))
      (setq ispell-program-name path)))

  ;; Set flyspell to german
  (setq ispell-dictionary "english")
#+end_src

* Backups
#+begin_src emacs-lisp
(setq backup-by-copying t
      backup-directory-alist
      `(("." . ,(concat user-emacs-directory "backups/")))
      delete-old-versions t
      kept-new-versions 6
      kept-old-versions 2
      version-control t)
#+end_src

* Dired
* Aliases
Set some aliases for simpler commands
#+begin_src emacs-lisp
(defalias 'yes-or-no-p 'y-or-n-p)
(defalias 'auto-tail-revert-mode 'tail-mode)
#+end_src

* Editing
Highlight matching parentheses when the point is on them.
#+begin_src emacs-lisp
(show-paren-mode 1)
#+end_src

* Random stuff
Seed the random number generator
#+begin_src emacs-lisp
(random t)
#+end_src
* Provide it
#+begin_src emacs-lisp
(provide 'general-settings)
#+end_src
